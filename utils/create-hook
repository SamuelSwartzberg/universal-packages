#!/usr/bin/env bash

# parameters

target="${1:?Target expected}"
type="${2:?package manager expected}"
hook_type="${3:-default}"

# derived variables


package_path="$(upkg "$type" which "$target")"
identifier="$(upkg "$type" listable-name "$target")"
PACKAGE_HOOK_HOME="$PACKAGE_MANAGER_DATA_HOME/hooks/$identifier"
hook_path="$PACKAGE_HOOK_HOME/$hook_type"

echo "Building package $identifier for $type..."

mkdir -p "$PACKAGE_MANAGER_DATA_HOME" "$PACKAGE_MANAGER_CACHE_HOME" "$PACKAGE_MANAGER_TMP_HOME"

declare -a basic_options extra_options options

while true; do
  # Ask user for hook type
  echo "Select hook type:"
  basic_options=(
    "1) none"
    "2) run a custom script"
  )
  mapfile -t extra_options < <(upkg "$type" extra-hook-types "$target")
  options=("${basic_options[@]}" "${extra_options[@]}")
  
  action_choice=$(printf '%s\n' "${options[@]}" | fzf --prompt="Enter choice: ")
  if [[ -z "$action_choice" ]]; then
    ask "No choice made. Do you want to cancel & exit?" Y && exit 1
  else
    ask "You chose $action_choice, is that correct?" Y && break 2
  fi
done

# Check if the user made a choice
if [[ -z "$action_choice" ]]; then
  echo "No choice made. Exiting..."
  exit 1
fi

# Extract the action index from the choice
action_index=$(printf '%s\n' "${options[@]}" | grep -nxF "$action_choice" | cut -d: -f1)

hook_code="$(
  cat <<EOF
#!/usr/bin/env bash

# This is an auto-generated hook created by upkg (package manager: $type) for $identifier, found at $package_path. Created at $(date -u +"%Y-%m-%dT%H:%M:%SZ").
# This file will not be regenerated unless manually deleted. Feel free to edit this file.

# upkg environment variables:

export PACKAGE_MANAGER_DATA_HOME="\${XDG_DATA_HOME:-\$HOME/.local/share}/upkg/$type"
export PACKAGE_MANAGER_CACHE_HOME="\${XDG_CACHE_HOME:-\$HOME/.cache}/upkg/$type"
export PACKAGE_MANAGER_TMP_HOME="\${XDG_RUNTIME_DIR:-\$HOME/.tmp}/upkg/$type"
export BIN_HOME="\${XDG_BIN_HOME:-\$HOME/.local/bin}"
export PACKAGE_IDENTIFIER='$identifier'
export PACKAGE_HOOK_HOME="\${PACKAGE_MANAGER_DATA_HOME}/hooks/\${PACKAGE_IDENTIFIER}"
export package_path_at_install='$package_path'

# package manager environment variables:

$(upkg "$type" extra-env "$target")

# extra info as provided by the package manager, if any:

EOF
)"

hook_code+="$(upkg "$type" extra-info "$target")"

skip_edit=false

case "$action_index" in
  "1") # none
    echo "Don't install anything. Empty script generated."
    skip_edit=true
    ;;
  "2") # run
    # No additional code needed
    ;;
  *) # extra hook type
    hook_code+="$(upkg "$type" get-hook-code-for-extra-hook-type "$target" "$action_index")"
    ;;
esac

# Save generated hook
mkdir -p "$(dirname "$hook_path")"
echo -e "$hook_code" > "$hook_path"

if [[ "$skip_edit" != true ]]; then
  # Ask user to edit the hook
  ask "Hook generated. Do you want to edit the script?" N && $VISUAL "$hook_path"
fi

chmod +x "$hook_path"

if ask "Hook created. Do you want to run it now?" Y; then
  "$hook_path"
fi