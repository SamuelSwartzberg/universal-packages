#!/usr/bin/env bash

target="${1:?Target expected}"
type="${2:?package manager expected}"
identifier="$(upkg "$type" listable-name "$target")"
PACKAGE_RUN_ON_HOME="$PACKAGE_MANAGER_WRAPPER_DATA_HOME/run-on/$identifier"
mkdir -p "$PACKAGE_RUN_ON_HOME"

event="$3"
if [[ -z "$event" ]]; then
  event=$( ( { cd "$PACKAGE_RUN_ON_HOME" || exit; } && tree -L 1 -if --noreport | cut -d / -f '2-' | tail -n '+2' | fzf --prompt="Select event: " ) )
fi

if [[ -z "$event" ]]; then
  echo "No event selected" >&2
  exit 1
fi

policy="$4"
if [[ -z "$policy" ]]; then
  policy=$( ( { cd "$PACKAGE_RUN_ON_HOME/$event" || exit; } && tree -L 1 -if --noreport | cut -d / -f '2-' | tail -n '+2' | fzf --prompt="Select policy: " ) )
fi

if [[ -z "$policy" ]]; then
  echo "No policy selected" >&2
  exit 1
fi

hook_type="$5"
if [[ -z "$hook_type" ]]; then
  hook_type=$( ( { cd "$PACKAGE_RUN_ON_HOME/$event/$policy" || exit; } && tree -L 1 -if --noreport | cut -d / -f '2-' | tail -n '+2' | fzf --prompt="Select hook: " ) )
fi

if [[ -z "$hook_type" ]]; then
  echo "No hook selected" >&2
  exit 1
fi

hook_path="$PACKAGE_RUN_ON_HOME/$event/$policy/$hook_type"

if [[ -f "$hook_path" ]]; then
  echo "$hook_path"
else
  echo "No $hook_type hook on $event with $policy policy found for $identifier of $type" >&2
fi