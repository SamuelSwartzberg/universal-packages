#!/usr/bin/env bash

SCRIPT_DIR=$(cd -- "$(dirname -- "$(realpath "${BASH_SOURCE[0]}")")" &>/dev/null && pwd)

package_manager="$1"

if [ -z "$package_manager" ]; then
  echo "usage: $0 [<package-manager>] <subcommand> [args]"
  exit 1
fi

# short commands are _<letter> to avoid conflicts with subcommands, since the package reasons about the first arg to determine if it is a subcommand or a package name

package_mangagers=("os" "pip" "cargo" "npm" "git-packages" "brew-cask" "brew-tap" "stew" "go")

case "$package_manager" in
"gp" | "gitp" | "gitpackages" | "gpackages")
  package_manager="git-packages"
  ;;
"_b" | "brew")
  package_manager="os"
  ;;
"_p" | "pip3" | "python")
  package_manager="pip"
  ;;
"bcask" | "b-cask")
  package_manager="brew-cask"
  ;;
"btap" | "b-tap")
  package_manager="brew-tap"
  ;;
"_c" | "rust")
  package_manager="cargo"
  ;;
"_n" | "node")
  package_manager="npm"
  ;;
"_s" | "git-release")
  package_manager="stew"
  ;;
"lpm" | "list-package-managers")
  echo "${package_mangagers[@]}" | tr ' ' '\n'
  exit 0
  ;;
esac

package_manager_command_path="$SCRIPT_DIR"/package-managers/__"$package_manager"

if [ ! -f "$package_manager_command_path" ]; then

  for package_manager in "${package_mangagers[@]}"; do
    $0 "$package_manager" "$@"
  done
  exit 0
else
  shift
fi

function zet_diff_output() {
  local output1 output2
  output1="$($0 "$package_manager" ${1:?})"
  output2="$($0 "$package_manager" ${2:?})"
  zet diff <(echo "$output1") <(echo "$output2")
}

pkg_command() { $package_manager_command_path "$@"; }

backup_file="$MDEPENDENCIES"/"$package_manager"

subcommand="$1"
shift

pkg_command test-existence >/dev/null 2>&1 || pkg_command install-self

case "$subcommand" in
es | "echo-self")
  echo "$package_manager"
  ;;
l | "list") # should list one package per line, with no other output
  pkg_command list
  ;;
wv | "with-version")
  pkg_command list-version | grep "$1"
  ;;
v | "version")
  $0 "$package_manager" with-version "$@" | cut -d'@' -f2
  ;;
lv | "list-version")
  pkg_command list-version "$@"
  ;;
ct | "count")
  pkg_command list | wc -l
  ;;
ii | "is-installed")
  pkg_command list | grep "^$1$"
  ;;
iipm | "is-installed-package-manager")
  pkg_command list | grep -q "^$1$" && echo "$package_manager"
  ;;
b | "backup")
  $0 "$package_manager" added >>"$backup_file"
  ;;
rb | "read-backup")
  cat "$backup_file" 2>/dev/null
  ;;
db | "delete-backup")
  rm "$backup_file"
  ;;
rpb | "replace-backup")
  $0 "$package_manager" delete-backup
  $0 "$package_manager" backup
  ;;
m | "missing")
  zet_diff_output read-backup list
  ;;
a | "added")
  zet_diff_output list read-backup
  ;;
d | "difference")
  zet single <($0 "$package_manager" read-backup) <($0 "$package_manager" list)
  ;;
miv | "missing-installable-verbose")
  missing_list="$($0 "$package_manager" missing)" && exit 0
  echo "missing packages for $(tput setaf 3)$package_manager$(tput sgr0):"
  echo "$missing_list" | sed 's/^/  /'
  echo ""
  exit 1
  ;;
im | "install-missing")
  missing_list="$($0 "$package_manager" missing | tr "\n" " ")"
  [ -z "$missing_list" ] || pkg_command install "$missing_list"
  ;;
nm | "none-missing")
  ! $0 "$package_manager" missing-installable | grep -E "\w" >/dev/null
  ;;
mpm | "missing-package-managers")
  $0 "$package_manager" none-missing || echo "$package_manager"
  ;;
i | "install")
  pkg_command install "$@"
  ;;
r | "remove")
  pkg_command remove "$@"
  ;;
is | "install-self")
  pkg_command install-self "$@"
  ;;
u | "upgrade")
  pkg_command upgrade "$@"
  ;;
w | "which")
  pkg_command which "$@"
  ;;
"link")
  pkg_command link "$@"
  ;;
ua | "upgrade-all")
  pkg_command upgrade-all "$@"
  ;;
pm | "package-manager")
  pkg_command package-manager
  ;;
pmv | "package-manager-version")
  pkg_command package-manager-version
  ;;
wpm | "which-package-manager")
  pkg_command which-self
  ;;
esac
